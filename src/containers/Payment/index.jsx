// tools
import React, { useState, useEffect } from "react"

// styles
import styles from "./styles.sass"
import { useOutsideAlerter } from '@tools/Hooks.jsx'

// Components
import Loader from '@components/Loader'
import OrderData from "@containers/Payment/render/OrderData"
import DepositOrderData from "@containers/Payment/render/DepositOrderData"
import NftData from "@containers/Payment/render/NftData"
import ContactData from "@containers/Payment/render/ContactData"
import WalletData from "@containers/Payment/render/WalletData"
import CardData from "@containers/Payment/render/CardData"
import Notifications from '@components/Notifications'
import AdditionalMenu from '@components/AdditionalMenu'
import { Button } from '@components/Base'

const PaymentContainer = (props) => {
  const [loading, setLoading] = useState(true)
  const [submit, setSubmit] = useState(false)
  const [backStep, setBackStep] = useState(false)
  const { ref, isShow, setIsShow } = useOutsideAlerter(false)
  const [paymentsFlag, setPaymentsFlag] = useState(false)
  const [submitButton, setSubmitButton] = useState({
    function: () => { console.log('функция не задана') },
    type: 'button',
    loading: false,
    disabled: false,
    title: '',
    event: false
  })

  // Отключаем прелоадер формы при загрузке валют и стран
  useEffect(() => {
    if (props.data.currencyes && props.data.countries) {
      if (props.data.id && props.data.status) setLoading(false)
      else if (!props.data.id) setLoading(false)
    }
  }, [props.data])

  // Отслеживание нажатия по Enter
  useEffect(() => {
    const onKeyDown = e => { if (e.keyCode === 13 && !submitButton.disabled) setSubmit(true) }
    document.addEventListener('keydown', onKeyDown)
    return () => document.removeEventListener('keydown', onKeyDown)
  })

  function renderForm() {
    if (loading) return <Loader />
    // TODO Тут надо поместить функционал с тем, что валюты с которой пришли не существует
    switch (props.step) {
      case 1: return (
        <>
          {
            props.data.type === 'DepositRequest' ?
              <DepositOrderData
                data={props.data}
                submit={submit}
                setSubmit={bool => setSubmit(bool)}
                setStep={(step) => props.setStep(step)}
                submitButton={value => setSubmitButton(obj => ({ ...obj, ...value }))}
              />
              :
              <>{
                props.data.query?.type === 'NFT' ?
                <NftData
                data={props.data}
                setData = {obj => props.setData(obj)}
                setStep={(step) => props.setStep(step)}
                submit={submit}
                setSubmit={bool => setSubmit(bool)}
                submitButton={value => setSubmitButton(obj => ({ ...obj, ...value }))}
                />
                :
                <OrderData
                data={props.data}
                setData = {obj => props.setData(obj)}
                setStep={(step) => props.setStep(step)}
                submit={submit}
                setSubmit={bool => setSubmit(bool)}
                submitButton={value => setSubmitButton(obj => ({ ...obj, ...value }))}
                />
              }
              </>
              

          }
        </>
      )
      case 2: return (
        <ContactData
          data={props.data}
          setData = {obj => props.setData(obj)}
          renewData={() => props.renewData()}
          setStep={(step) => props.setStep(step)}
          submit={submit}
          setSubmit={bool => setSubmit(bool)}
          backStep={backStep}
          setBackStep={bool => setBackStep(bool)}
          submitButton={value => setSubmitButton(obj => ({ ...obj, ...value }))}
        />
      )
      case 3: return (
        <WalletData
          data={props.data}
          setData = {obj => props.setData(obj)}
          renewData={() => props.renewData()}
          setStep={(step) => props.setStep(step)}
          submit={submit}
          setSubmit={bool => setSubmit(bool)}
          backStep={backStep}
          setBackStep={bool => setBackStep(bool)}
          submitButton={value => setSubmitButton(obj => ({ ...obj, ...value }))}
        />
      )
      case 4: return (
        <CardData
          data={props.data}
          setData = {obj => props.setData(obj)}
          renewData={() => props.renewData()}
          setStep={(step) => props.setStep(step)}
          submit={submit}
          setSubmit={bool => setSubmit(bool)}
          backStep={backStep}
          setBackStep={bool => setBackStep(bool)}
          submitButton={value => setSubmitButton(obj => ({ ...obj, ...value }))}
          setPaymentsFlag={() => setPaymentsFlag(!paymentsFlag)}
        />
      )
    }
  }

  function computedHeaderContainer() {
    switch (props.step) {
      case 1: return (
        <div className={styles.HeaderContainer}>
          <div>
            <svg className={styles.logoIndacoin} width="165" height="22" viewBox="0 0 165 22" fill="none" xmlns="http://www.w3.org/2000/svg">
              <g clipPath="url(#clip0_1838_10308)">
              <path d="M57.6692 22C57.8702 21.3964 58.1174 20.809 58.4081 20.2429C60.9198 14.6378 63.4315 9.03275 65.9431 3.42766C66.1357 2.9477 66.3622 2.48199 66.6213 2.0341C67.2157 1.06659 68.1716 0.373428 69.2787 0.106754C69.3948 0.0750163 69.5078 0.034623 69.6236 0H71.1451C71.7844 0.107308 72.3924 0.352789 72.926 0.719174C73.4598 1.08556 73.9065 1.56394 74.2346 2.12066C74.4287 2.44957 74.5909 2.80157 74.7591 3.14781C76.4283 6.57932 78.0966 10.0176 79.7639 13.4626C81.1434 16.3074 82.521 19.1532 83.8967 22H76.8687C76.4833 21.1344 76.0834 20.2458 75.7096 19.3542C75.6721 19.2128 75.5839 19.0898 75.4616 19.0085C75.3395 18.9272 75.1916 18.8932 75.046 18.9128C72.7998 18.9301 70.5539 18.9128 68.3079 18.9128C68.05 18.9128 67.8733 18.9128 68.018 18.5579C68.6886 17.0922 69.3484 15.6217 69.9974 14.1464C70.031 14.0573 70.094 13.9823 70.1764 13.934C70.2586 13.8857 70.355 13.867 70.4497 13.8809C71.293 13.8809 72.1392 13.8809 72.9853 13.8809C73.2752 13.8809 73.3477 13.829 73.2172 13.5376C72.8173 12.6374 72.4405 11.7285 72.0581 10.8197L70.806 7.88249C70.7163 8.05271 70.6524 8.17102 70.6002 8.28065C69.2151 11.3256 67.8308 14.3685 66.4474 17.4096C65.7576 18.9301 65.0765 20.4564 64.3898 21.9797L57.6692 22Z" fill="var(--Fill-TextLogo-Indacoin)"/>
              <path d="M0 0.64829C0.136781 0.570039 0.295918 0.539571 0.452096 0.561732H5.08897C5.54687 0.561732 5.57295 0.587701 5.57295 1.06088C5.57295 3.38063 5.57295 5.70036 5.57295 8.02011V20.8566C5.57295 21.5029 5.57295 21.5029 4.9093 21.5029H0.527446C0.347469 21.5297 0.163538 21.5016 0 21.4221V0.64829Z" fill="var(--Fill-TextLogo-Indacoin)"/>
              <path d="M158.861 14.1207V1.11974C158.861 0.626364 158.861 0.623478 159.36 0.623478C160.954 0.623478 162.548 0.623478 164.142 0.623478C164.478 0.623478 164.571 0.730234 164.571 1.05627C164.571 6.45458 164.571 11.85 164.571 17.2483C164.541 18.3094 164.137 19.3263 163.43 20.1203C162.722 20.9144 161.756 21.435 160.702 21.5905C158.917 21.833 157.514 21.1636 156.337 19.8594C153.958 17.2194 151.55 14.6083 149.156 11.9856C148.084 10.8103 147.013 9.63507 145.945 8.45982C145.858 8.36172 145.777 8.25496 145.678 8.13378C145.629 8.19648 145.594 8.26947 145.576 8.34736C145.559 8.42526 145.559 8.50608 145.577 8.58388C145.577 12.7059 145.577 16.829 145.577 20.9529C145.577 21.53 145.577 21.53 144.997 21.53C143.415 21.53 141.833 21.53 140.253 21.53C139.92 21.53 139.815 21.4261 139.815 21.0972C139.815 15.7104 139.789 10.3266 139.839 4.93981C139.853 3.07307 140.818 1.68525 142.54 0.92066C144.299 0.132987 145.991 0.386889 147.417 1.65928C148.576 2.70375 149.562 3.93864 150.622 5.08984C152.425 7.04892 154.21 9.01957 156.007 10.9844L158.861 14.1207Z" fill="var(--Fill-TextLogo-Indacoin)"/>
              <path d="M98.4905 0.0666174H103.562C104.014 0.0666174 104.034 0.086814 104.034 0.531143C104.034 2.03532 104.034 3.53756 104.034 5.0379C104.034 5.5255 104.008 5.55147 103.524 5.55147H93.9608C92.5781 5.54849 91.2458 6.06767 90.2323 7.00426C89.219 7.94086 88.6002 9.22518 88.5005 10.5982C88.4009 11.9713 88.8279 13.3308 89.6954 14.4027C90.5631 15.4746 91.8068 16.1791 93.1755 16.374C93.5107 16.4182 93.8487 16.4394 94.1869 16.4375H103.533C104.026 16.4375 104.034 16.4375 104.034 16.9453C104.034 18.4225 104.034 19.9007 104.034 21.3799C104.034 21.8964 104.014 21.9195 103.516 21.9195C100.293 21.9195 97.0676 21.9714 93.845 21.9195C91.0685 21.8908 88.4061 20.8156 86.3939 18.9106C84.382 17.0057 83.1696 14.4124 83.0014 11.6531C82.8332 8.89387 83.7213 6.17361 85.4872 4.04028C87.2528 1.90695 89.7651 0.519025 92.5177 0.15606C93.6362 0.00314208 94.7606 0.0781583 95.8822 0.0695026C96.7516 0.0579617 97.6211 0.0666174 98.4905 0.0666174Z" fill="url(#paint0_linear_1838_10308)"/>
              <path d="M112.191 0.130859C113.64 0.130859 115.112 0.130859 116.572 0.130859C120.253 0.165482 123.2 1.67735 125.397 4.59433C126.929 6.61167 127.679 9.11108 127.51 11.6343C127.365 14.1559 126.349 16.5504 124.636 18.4129C122.923 20.2755 120.616 21.492 118.105 21.8566C117.615 21.9222 117.122 21.9531 116.627 21.9492C113.428 21.9492 110.228 21.9492 107.029 21.9492C106.502 21.9492 106.499 21.9492 106.499 21.4326C106.499 19.9438 106.499 18.4521 106.499 16.9634C106.499 16.6143 106.618 16.5104 106.959 16.5104C110.097 16.5219 113.236 16.5219 116.375 16.5104C117.68 16.5283 118.951 16.1029 119.98 15.3044C122.452 13.3885 122.728 9.53387 120.546 7.3007C120.012 6.74114 119.367 6.29828 118.652 6.00024C117.937 5.70221 117.168 5.55554 116.393 5.56954C113.269 5.56954 110.142 5.56954 107.014 5.56954C106.51 5.56954 106.504 5.56954 106.504 5.0704V0.630006C106.504 0.139515 106.504 0.130859 107.018 0.130859H112.191Z" fill="url(#paint1_linear_1838_10308)"/>
              <path d="M130.898 11.0359V1.08175C130.898 0.559527 130.898 0.556641 131.416 0.556641C132.938 0.556641 134.459 0.556641 135.981 0.556641C136.317 0.556641 136.445 0.654739 136.445 1.00674C136.445 7.68897 136.445 14.3702 136.445 21.0505C136.445 21.3939 136.337 21.5122 135.987 21.5093C134.441 21.4939 132.895 21.4939 131.35 21.5093C130.97 21.5093 130.886 21.3679 130.889 21.0188C130.908 17.695 130.911 14.3674 130.898 11.0359Z" fill="var(--Fill-TextLogo-Indacoin)"/>
              <path d="M14.7633 8.06996C14.7011 8.22557 14.6802 8.39446 14.7024 8.56045C14.7024 12.6613 14.7024 16.7603 14.7024 20.8574C14.7024 21.5037 14.7024 21.5037 14.0387 21.5037H9.4888C8.97874 21.5037 8.97294 21.5037 8.97294 21.0103C8.97294 15.688 8.97294 10.3637 8.97294 5.03756C8.96919 4.12652 9.24056 3.23539 9.75187 2.4798C10.2632 1.72423 10.9908 1.13911 11.8403 0.800381C12.6898 0.46165 13.6219 0.38495 14.5157 0.580237C15.4096 0.775521 16.2238 1.23378 16.8527 1.89553C19.1712 4.39414 21.4549 6.92162 23.7529 9.43756C25.0514 10.861 26.3526 12.2824 27.6566 13.702C27.7263 13.777 27.7755 13.8837 27.9088 13.8981C28.016 13.7597 27.9668 13.6096 27.9668 13.4509C27.9668 9.37697 27.9668 5.30203 27.9668 1.22615C27.9668 0.562542 27.9668 0.562542 28.6479 0.562542H33.2093C33.7049 0.562542 33.7079 0.562542 33.7079 1.07034C33.7079 6.41959 33.7079 11.7688 33.7079 17.1181C33.7019 18.0321 33.4163 18.9226 32.8892 19.6711C32.3623 20.4195 31.6186 20.9903 30.7576 21.3075C29.9028 21.6222 28.9734 21.6778 28.0867 21.4674C27.2 21.2568 26.3959 20.7896 25.7759 20.1245L18.6148 12.294L15.0328 8.3758L14.7633 8.06996Z" fill="var(--Fill-TextLogo-Indacoin)"/>
              <path d="M36.5207 10.9698V0.623295C36.5207 0.0462452 36.5207 0.0462452 37.1003 0.0462452C40.6852 0.0462452 44.2701 0.0462452 47.8551 0.0462452C50.6937 0.00232239 53.4394 1.05325 55.5175 2.97906C57.5955 4.90489 58.8447 7.55628 59.0039 10.3783C59.1387 12.7306 58.5063 15.0632 57.2005 17.0282C55.8948 18.9932 53.9859 20.4852 51.7588 21.2817C50.6126 21.7042 49.4018 21.9259 48.1797 21.9367C44.4615 21.9367 40.7432 21.9367 37.025 21.9367C36.541 21.9367 36.5207 21.9164 36.5207 21.4231C36.5188 17.9415 36.5188 14.4571 36.5207 10.9698ZM42.0967 11.0015C42.0967 12.6606 42.0967 14.3196 42.0967 15.9757C42.0967 16.3162 42.1922 16.4344 42.5457 16.4316C44.3454 16.4172 46.1423 16.4114 47.942 16.4316C49.3886 16.4595 50.7869 15.9142 51.8295 14.9156C52.8724 13.917 53.4739 12.547 53.5019 11.1068C53.53 9.6667 52.9821 8.27447 51.9792 7.23639C50.9763 6.19831 49.6 5.59942 48.1536 5.57149C46.2931 5.57149 44.4354 5.57149 42.5748 5.57149C42.1053 5.57149 42.1025 5.57149 42.1025 6.06487L42.0967 11.0015Z" fill="var(--Fill-TextLogo-Indacoin)"/>
              </g>
              <defs>
              <linearGradient id="paint0_linear_1838_10308" x1="93.5079" y1="0.0585938" x2="87.5688" y2="19.3043" gradientUnits="userSpaceOnUse">
              <stop stopColor="#3463F8"/>
              <stop offset="1" stopColor="#214FDF"/>
              </linearGradient>
              <linearGradient id="paint1_linear_1838_10308" x1="117.016" y1="0.130859" x2="106.549" y2="19.8441" gradientUnits="userSpaceOnUse">
              <stop stopColor="#3463F8"/>
              <stop offset="1" stopColor="#214FDF"/>
              </linearGradient>
              <clipPath id="clip0_1838_10308">
              <rect width="164.784" height="22" fill="white"/>
              </clipPath>
              </defs>
            </svg>
          </div>
          <svg onClick={() => setIsShow(true)} className={styles.help} width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M9.09 9C9.3251 8.33167 9.78915 7.76811 10.4 7.40913C11.0108 7.05016 11.7289 6.91894 12.4272 7.03871C13.1255 7.15849 13.7588 7.52152 14.2151 8.06353C14.6713 8.60553 14.9211 9.29152 14.92 10C14.92 12 11.92 13 11.92 13M12 17H12.01M22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12Z" stroke="#3463F8" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
          </svg>
        </div>)
      case 2: return (
        <div className={styles.HeaderContainer}>
          <span>Step 1 of 3</span>
          <svg width="324" height="6" viewBox="0 0 324 6">
            <rect width="324" height="6" rx="3" fill="#DADCE0" />
            <rect width="108" height="6" rx="3" fill="var(--Color7)" />
          </svg>
          <svg onClick={() => setIsShow(true)} className={styles.help} width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M9.09 9C9.3251 8.33167 9.78915 7.76811 10.4 7.40913C11.0108 7.05016 11.7289 6.91894 12.4272 7.03871C13.1255 7.15849 13.7588 7.52152 14.2151 8.06353C14.6713 8.60553 14.9211 9.29152 14.92 10C14.92 12 11.92 13 11.92 13M12 17H12.01M22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12Z" stroke="#3463F8" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
          </svg>
        </div>)
      case 3:
      case 4: return (
        <div className={styles.HeaderContainer}>
          <span>Step 2 of 3</span>
          <svg width="324" height="6" viewBox="0 0 324 6">
            <rect width="324" height="6" rx="3" fill="#DADCE0" />
            <rect width="216" height="6" rx="3" fill="var(--Color7)" />
          </svg>
          <svg onClick={() => setIsShow(true)} className={styles.help} width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M9.09 9C9.3251 8.33167 9.78915 7.76811 10.4 7.40913C11.0108 7.05016 11.7289 6.91894 12.4272 7.03871C13.1255 7.15849 13.7588 7.52152 14.2151 8.06353C14.6713 8.60553 14.9211 9.29152 14.92 10C14.92 12 11.92 13 11.92 13M12 17H12.01M22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12Z" stroke="#3463F8" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
          </svg>
        </div>)
    }
  }

  function computedFooterContiner() {
    if (!props.data.currencyes) return
    switch (props.step) {
      case 1: return (
        <Button
          onClick={() => setSubmit(true)}
          loading={submitButton.loading}
          disabled={submitButton.disabled}
          className={submitButton.className}
          title={'NEXT'} />
      )
      case 2:
      case 3:
      case 4: {
        return (
          !paymentsFlag ?
          <>
            <Button onClick={() => setBackStep(true)} className={'white'}>
              <svg width="13" height="23" viewBox="0 0 13 23" fill="none">
                <path d="M11 2L2 11.5L11 21" stroke="var(--Color7)" strokeWidth="3" strokeLinecap="round" strokeLinejoin="round" />
              </svg>
            </Button>
            <Button
              onClick={() => setSubmit(true)}
              loading={submitButton.loading}
              disabled={submitButton.disabled}
              className={submitButton.className}
              title={'NEXT'} />
          </>
          : <></>
        )
      }
    }
  }

  return (
    <div className={`${styles.PaymentContainer} ${sessionStorage.getItem('userIdWallet') ? styles.wallet : ''}`}>
      <div className={styles.topSection}>
        {
          sessionStorage.getItem('userIdWallet') ? null : computedHeaderContainer()
        }
        {renderForm()}
      </div>
      <div className={styles.bottomSection}>
        <div className={`${styles.buttonBlock} ${(props.step !== 1 && props.step !== 0) && styles.duosButton}`}>
          {computedFooterContiner()}
        </div>
        {
          props.step === 0 ? <span>or you will be redirected in 5 seconds</span>
          :
          <>
            {
              sessionStorage.getItem('userIdWallet') ? null :
              <div className={styles.logoBlock}>
                <svg width="445" height="24" viewBox="0 0 445 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M4.41418 7.00586C5.70389 7.00586 6.64498 7.27018 7.23742 7.79883C7.82987 8.32747 8.12609 9.06803 8.12609 10.0205C8.12609 10.4535 8.05774 10.8659 7.92102 11.2578C7.78886 11.6452 7.57011 11.9893 7.26477 12.29C6.95943 12.5863 6.55611 12.821 6.05481 12.9941C5.55806 13.1673 4.94511 13.2539 4.21594 13.2539H3.14953V17H1.50891V7.00586H4.41418ZM4.30481 8.36621H3.14953V11.8867H4.04504C4.56001 11.8867 4.99751 11.8275 5.35754 11.709C5.71757 11.5859 5.991 11.3923 6.17785 11.1279C6.3647 10.8636 6.45813 10.515 6.45813 10.082C6.45813 9.50326 6.28267 9.07259 5.93176 8.79004C5.5854 8.50749 5.04309 8.36621 4.30481 8.36621ZM18.8552 11.9893C18.8552 12.7594 18.7573 13.4613 18.5613 14.0947C18.3699 14.7236 18.0805 15.266 17.6931 15.7217C17.3058 16.1729 16.8204 16.5215 16.2371 16.7676C15.6537 17.0137 14.9701 17.1367 14.1863 17.1367C13.3888 17.1367 12.6961 17.0137 12.1082 16.7676C11.5248 16.5215 11.0395 16.1706 10.6521 15.7148C10.2693 15.2591 9.98219 14.7145 9.79078 14.0811C9.59938 13.4476 9.50367 12.7458 9.50367 11.9756C9.50367 10.9456 9.67229 10.0479 10.0095 9.28223C10.3513 8.51204 10.8686 7.91504 11.5613 7.49121C12.2586 7.06283 13.1381 6.84863 14.2 6.84863C15.239 6.84863 16.1026 7.06055 16.7908 7.48438C17.4789 7.9082 17.9939 8.50521 18.3357 9.27539C18.6821 10.041 18.8552 10.9456 18.8552 11.9893ZM11.2263 11.9893C11.2263 12.7594 11.3311 13.4271 11.5408 13.9922C11.7504 14.5527 12.0717 14.9857 12.5046 15.291C12.9421 15.5918 13.5027 15.7422 14.1863 15.7422C14.8744 15.7422 15.435 15.5918 15.8679 15.291C16.3009 14.9857 16.6199 14.5527 16.825 13.9922C17.03 13.4271 17.1326 12.7594 17.1326 11.9893C17.1326 10.818 16.8979 9.90202 16.4285 9.24121C15.9636 8.57585 15.2208 8.24316 14.2 8.24316C13.5164 8.24316 12.9535 8.39355 12.5115 8.69434C12.074 8.99512 11.7504 9.42578 11.5408 9.98633C11.3311 10.5423 11.2263 11.21 11.2263 11.9893ZM32.6811 7.00586L30.0697 17H28.2787L26.6107 11.0117C26.5697 10.8659 26.5242 10.6927 26.474 10.4922C26.4239 10.2917 26.3738 10.0866 26.3236 9.87695C26.2781 9.66732 26.237 9.47591 26.2006 9.30273C26.1687 9.125 26.1459 8.98828 26.1322 8.89258C26.1231 8.98828 26.1026 9.12272 26.0707 9.2959C26.0388 9.46908 26.0001 9.66048 25.9545 9.87012C25.9135 10.0752 25.8679 10.2803 25.8178 10.4854C25.7676 10.6859 25.7221 10.8636 25.6811 11.0186L24.0404 17H22.2563L19.6518 7.00586H21.2992L22.7416 12.8643C22.7872 13.0511 22.8327 13.2539 22.8783 13.4727C22.9285 13.6868 22.974 13.9033 23.015 14.1221C23.0606 14.3408 23.1016 14.555 23.1381 14.7646C23.1745 14.9697 23.2042 15.1566 23.227 15.3252C23.2497 15.152 23.2794 14.9606 23.3158 14.751C23.3523 14.5368 23.391 14.3203 23.432 14.1016C23.4776 13.8783 23.5232 13.6641 23.5688 13.459C23.6189 13.2539 23.669 13.0693 23.7191 12.9053L25.3461 7.00586H26.9457L28.6068 12.9258C28.657 13.0944 28.7048 13.2835 28.7504 13.4932C28.8005 13.7028 28.8484 13.917 28.8939 14.1357C28.9395 14.3545 28.9805 14.5664 29.017 14.7715C29.0535 14.9766 29.0831 15.1611 29.1059 15.3252C29.1378 15.1019 29.1788 14.8467 29.2289 14.5596C29.279 14.2725 29.336 13.9808 29.3998 13.6846C29.4636 13.3883 29.5274 13.1149 29.5912 12.8643L31.0268 7.00586H32.6811ZM39.6163 17H33.9561V7.00586H39.6163V8.38672H35.5967V11.1006H39.3633V12.4746H35.5967V15.6123H39.6163V17ZM44.446 7.00586C45.3073 7.00586 46.0182 7.11068 46.5788 7.32031C47.1439 7.52995 47.5632 7.84896 47.8366 8.27734C48.1146 8.70573 48.2536 9.25033 48.2536 9.91113C48.2536 10.4033 48.1624 10.8226 47.9802 11.1689C47.7979 11.5153 47.5586 11.8024 47.2624 12.0303C46.9662 12.2581 46.6494 12.4404 46.3122 12.5771L49.1491 17H47.2966L44.8835 12.9941H43.277V17H41.6364V7.00586H44.446ZM44.3366 8.37305H43.277V11.6406H44.4118C45.1729 11.6406 45.7243 11.4993 46.0661 11.2168C46.4124 10.9342 46.5856 10.5173 46.5856 9.96582C46.5856 9.38704 46.4011 8.97689 46.0319 8.73535C45.6673 8.49382 45.1022 8.37305 44.3366 8.37305ZM56.098 17H50.4378V7.00586H56.098V8.38672H52.0784V11.1006H55.845V12.4746H52.0784V15.6123H56.098V17ZM66.2324 11.9072C66.2324 13.0329 66.0227 13.974 65.6035 14.7305C65.1842 15.4824 64.5758 16.0498 63.7783 16.4326C62.9808 16.8109 62.0192 17 60.8935 17H58.1181V7.00586H61.1943C62.2288 7.00586 63.122 7.19271 63.874 7.56641C64.6259 7.93555 65.207 8.4847 65.6171 9.21387C66.0273 9.93848 66.2324 10.8363 66.2324 11.9072ZM64.5234 11.9551C64.5234 11.1348 64.3935 10.4603 64.1338 9.93164C63.8785 9.40299 63.5003 9.01107 62.999 8.75586C62.5022 8.49609 61.8893 8.36621 61.1601 8.36621H59.7588V15.626H60.9209C62.1285 15.626 63.0309 15.3184 63.6279 14.7031C64.2249 14.0879 64.5234 13.1719 64.5234 11.9551ZM71.7424 7.00586H74.716C76.0058 7.00586 76.9787 7.19271 77.635 7.56641C78.2912 7.9401 78.6194 8.58496 78.6194 9.50098C78.6194 9.88379 78.551 10.2301 78.4143 10.54C78.2821 10.8454 78.0884 11.0983 77.8332 11.2988C77.578 11.4948 77.2636 11.627 76.8899 11.6953V11.7637C77.2772 11.832 77.6213 11.9528 77.9221 12.126C78.2274 12.2992 78.4667 12.5475 78.6399 12.8711C78.8176 13.1947 78.9065 13.6139 78.9065 14.1289C78.9065 14.7396 78.7606 15.2591 78.469 15.6875C78.1819 16.1159 77.7694 16.4417 77.2317 16.665C76.6985 16.8883 76.065 17 75.3313 17H71.7424V7.00586ZM73.383 11.1279H74.9553C75.6981 11.1279 76.2131 11.0072 76.5002 10.7656C76.7873 10.5241 76.9309 10.1709 76.9309 9.70605C76.9309 9.2321 76.76 8.8903 76.4182 8.68066C76.081 8.47103 75.5432 8.36621 74.8049 8.36621H73.383V11.1279ZM73.383 12.4541V15.626H75.1125C75.8782 15.626 76.4159 15.4779 76.7258 15.1816C77.0357 14.8854 77.1907 14.4844 77.1907 13.9785C77.1907 13.6686 77.12 13.3997 76.9787 13.1719C76.842 12.944 76.6164 12.7686 76.302 12.6455C75.9875 12.5179 75.5637 12.4541 75.0305 12.4541H73.383ZM83.661 11.5654L86.0331 7.00586H87.8036L84.4813 13.1172V17H82.8475V13.1787L79.5184 7.00586H81.3026L83.661 11.5654Z" fill="#DADCE0"/>
                  <g clipPath="url(#clip0_1029_352)">
                  <path d="M136.596 20C136.738 19.561 136.912 19.1338 137.116 18.7221C138.884 14.6457 140.653 10.5693 142.421 6.49285C142.556 6.14378 142.716 5.80508 142.898 5.47934C143.316 4.7757 143.989 4.27158 144.769 4.07764C144.85 4.05456 144.93 4.02518 145.012 4H146.083C146.533 4.07804 146.961 4.25657 147.336 4.52304C147.712 4.7895 148.026 5.13741 148.257 5.5423C148.394 5.78151 148.508 6.03751 148.627 6.28932C149.802 8.78496 150.976 11.2855 152.15 13.7909C153.121 15.8599 154.091 17.9296 155.059 20H150.112C149.84 19.3705 149.559 18.7242 149.296 18.0758C149.269 17.9729 149.207 17.8835 149.121 17.8244C149.035 17.7652 148.931 17.7405 148.829 17.7548C147.247 17.7673 145.666 17.7548 144.085 17.7548C143.904 17.7548 143.779 17.7548 143.881 17.4967C144.353 16.4307 144.818 15.3612 145.275 14.2883C145.298 14.2235 145.343 14.169 145.401 14.1338C145.459 14.0987 145.526 14.0851 145.593 14.0952C146.187 14.0952 146.782 14.0952 147.378 14.0952C147.582 14.0952 147.633 14.0574 147.541 13.8455C147.26 13.1908 146.994 12.5298 146.725 11.8688L145.844 9.73272C145.781 9.85652 145.736 9.94256 145.699 10.0223C144.724 12.2368 143.749 14.4498 142.776 16.6615C142.29 17.7673 141.811 18.8774 141.327 19.9853L136.596 20Z" fill="#DADCE0"/>
                  <path d="M96 4.47225C96.0963 4.41534 96.2083 4.39318 96.3183 4.4093H99.5824C99.9047 4.4093 99.9231 4.42818 99.9231 4.77231C99.9231 6.4594 99.9231 8.14648 99.9231 9.83357V19.1692C99.9231 19.6392 99.9231 19.6392 99.4559 19.6392H96.3713C96.2446 19.6587 96.1151 19.6383 96 19.5805V4.47225Z" fill="#DADCE0"/>
                  <path d="M207.83 14.2692V4.81399C207.83 4.45517 207.83 4.45307 208.181 4.45307C209.303 4.45307 210.425 4.45307 211.548 4.45307C211.784 4.45307 211.849 4.53071 211.849 4.76783C211.849 8.69387 211.849 12.6178 211.849 16.5438C211.829 17.3155 211.544 18.0551 211.046 18.6326C210.548 19.2101 209.868 19.5887 209.126 19.7018C207.869 19.8781 206.882 19.3913 206.054 18.4428C204.379 16.5228 202.683 14.6238 200.998 12.7164C200.243 11.8617 199.49 11.007 198.738 10.1522C198.677 10.0809 198.62 10.0032 198.55 9.91511C198.515 9.96071 198.491 10.0138 198.478 10.0704C198.466 10.1271 198.466 10.1859 198.479 10.2425C198.479 13.2403 198.479 16.2389 198.479 19.2381C198.479 19.6578 198.479 19.6578 198.071 19.6578C196.957 19.6578 195.843 19.6578 194.731 19.6578C194.497 19.6578 194.423 19.5823 194.423 19.3431C194.423 15.4254 194.405 11.5099 194.439 7.59222C194.45 6.23459 195.129 5.22527 196.341 4.6692C197.579 4.09635 198.77 4.28101 199.774 5.20639C200.59 5.96599 201.284 6.8641 202.03 7.70134C203.299 9.12612 204.556 10.5593 205.821 11.9883L207.83 14.2692Z" fill="#DADCE0"/>
                  <path d="M165.333 4.04801H168.903C169.221 4.04801 169.235 4.0627 169.235 4.38585C169.235 5.47979 169.235 6.57234 169.235 7.66349C169.235 8.01811 169.217 8.037 168.876 8.037H162.144C161.171 8.03483 160.233 8.41242 159.519 9.09358C158.806 9.77474 158.37 10.7088 158.3 11.7074C158.23 12.7059 158.531 13.6947 159.141 14.4743C159.752 15.2538 160.628 15.7662 161.591 15.9079C161.827 15.9401 162.065 15.9555 162.303 15.9541H168.882C169.229 15.9541 169.235 15.9541 169.235 16.3234C169.235 17.3978 169.235 18.4728 169.235 19.5486C169.235 19.9242 169.221 19.941 168.87 19.941C166.602 19.941 164.331 19.9788 162.062 19.941C160.108 19.9201 158.234 19.1382 156.817 17.7528C155.401 16.3673 154.547 14.4813 154.429 12.4746C154.311 10.4678 154.936 8.48947 156.179 6.93795C157.422 5.38644 159.19 4.37704 161.128 4.11306C161.915 4.00185 162.707 4.0564 163.496 4.05011C164.108 4.04172 164.721 4.04801 165.333 4.04801Z" fill="#DADCE0"/>
                  <path d="M174.976 4.09375C175.996 4.09375 177.033 4.09375 178.061 4.09375C180.652 4.11893 182.726 5.21847 184.273 7.33992C185.351 8.80707 185.879 10.6248 185.76 12.4599C185.658 14.2938 184.943 16.0352 183.737 17.3898C182.531 18.7444 180.907 19.6291 179.14 19.8943C178.795 19.942 178.447 19.9645 178.1 19.9616C175.847 19.9616 173.595 19.9616 171.343 19.9616C170.971 19.9616 170.969 19.9616 170.969 19.5859C170.969 18.5032 170.969 17.4183 170.969 16.3356C170.969 16.0817 171.053 16.0061 171.294 16.0061C173.503 16.0145 175.712 16.0145 177.922 16.0061C178.84 16.0192 179.736 15.7098 180.46 15.129C182.2 13.7357 182.394 10.9323 180.858 9.30818C180.482 8.90123 180.028 8.57915 179.525 8.36239C179.021 8.14564 178.48 8.03898 177.934 8.04916C175.735 8.04916 173.534 8.04916 171.333 8.04916C170.978 8.04916 170.973 8.04916 170.973 7.68614V4.45677C170.973 4.10005 170.973 4.09375 171.335 4.09375H174.976Z" fill="#DADCE0"/>
                  <path d="M188.145 12.0263V4.78699C188.145 4.40719 188.145 4.40509 188.51 4.40509C189.582 4.40509 190.653 4.40509 191.724 4.40509C191.96 4.40509 192.05 4.47643 192.05 4.73243C192.05 9.59224 192.05 14.4513 192.05 19.3097C192.05 19.5595 191.974 19.6455 191.728 19.6434C190.64 19.6322 189.552 19.6322 188.464 19.6434C188.196 19.6434 188.137 19.5406 188.139 19.2867C188.153 16.8694 188.155 14.4492 188.145 12.0263Z" fill="#DADCE0"/>
                  <path d="M106.393 9.86953C106.349 9.98271 106.334 10.1055 106.35 10.2263C106.35 13.2087 106.35 16.1898 106.35 19.1695C106.35 19.6395 106.35 19.6395 105.883 19.6395H102.68C102.321 19.6395 102.316 19.6395 102.316 19.2807C102.316 15.4099 102.316 11.5377 102.316 7.66415C102.314 7.00158 102.505 6.35348 102.865 5.80396C103.225 5.25446 103.737 4.82892 104.335 4.58257C104.933 4.33622 105.589 4.28044 106.218 4.42246C106.847 4.56449 107.421 4.89776 107.863 5.37904C109.495 7.19621 111.103 9.03438 112.721 10.8641C113.635 11.8993 114.551 12.9331 115.469 13.9655C115.518 14.0201 115.552 14.0977 115.646 14.1082C115.722 14.0075 115.687 13.8984 115.687 13.783C115.687 10.8201 115.687 7.85649 115.687 4.89222C115.687 4.40959 115.687 4.40959 116.167 4.40959H119.378C119.726 4.40959 119.729 4.40959 119.729 4.7789C119.729 8.66926 119.729 12.5596 119.729 16.45C119.724 17.1147 119.523 17.7624 119.152 18.3067C118.781 18.851 118.258 19.2661 117.652 19.4968C117.05 19.7257 116.396 19.7662 115.772 19.6131C115.147 19.46 114.581 19.1201 114.145 18.6365L109.104 12.9415L106.582 10.092L106.393 9.86953Z" fill="#DADCE0"/>
                  <path d="M121.709 11.9781V4.45335C121.709 4.03368 121.709 4.03368 122.117 4.03368C124.64 4.03368 127.164 4.03368 129.688 4.03368C131.686 4.00173 133.619 4.76605 135.082 6.16663C136.544 7.56723 137.424 9.49551 137.536 11.5479C137.631 13.2586 137.186 14.9551 136.266 16.3842C135.347 17.8133 134.003 18.8984 132.436 19.4776C131.629 19.7849 130.776 19.9462 129.916 19.954C127.299 19.954 124.681 19.954 122.064 19.954C121.723 19.954 121.709 19.9393 121.709 19.5804C121.707 17.0484 121.707 14.5143 121.709 11.9781ZM125.634 12.0012C125.634 13.2077 125.634 14.4143 125.634 15.6187C125.634 15.8663 125.701 15.9524 125.95 15.9503C127.217 15.9398 128.482 15.9356 129.749 15.9503C130.767 15.9706 131.751 15.574 132.485 14.8477C133.22 14.1215 133.643 13.1251 133.663 12.0777C133.682 11.0304 133.297 10.0178 132.591 9.26287C131.885 8.5079 130.916 8.07234 129.898 8.05203C128.588 8.05203 127.28 8.05203 125.971 8.05203C125.64 8.05203 125.638 8.05203 125.638 8.41085L125.634 12.0012Z" fill="#DADCE0"/>
                  </g>
                  <line x1="221.5" y1="0.5" x2="221.5" y2="23.5" stroke="#DADCE0" strokeLinecap="round"/>
                  <path d="M237.143 14.2793C237.143 14.8717 236.997 15.3822 236.706 15.8105C236.418 16.2389 236.004 16.5671 235.461 16.7949C234.924 17.0228 234.281 17.1367 233.534 17.1367C233.169 17.1367 232.82 17.1162 232.488 17.0752C232.155 17.0342 231.841 16.9749 231.544 16.8975C231.253 16.8154 230.986 16.7174 230.745 16.6035V15.0586C231.15 15.2363 231.604 15.3981 232.105 15.5439C232.606 15.6852 233.117 15.7559 233.636 15.7559C234.06 15.7559 234.411 15.7012 234.689 15.5918C234.971 15.4779 235.181 15.3184 235.318 15.1133C235.455 14.9036 235.523 14.6598 235.523 14.3818C235.523 14.0856 235.443 13.835 235.284 13.6299C235.124 13.4248 234.883 13.238 234.559 13.0693C234.24 12.8962 233.839 12.7116 233.356 12.5156C233.028 12.3835 232.713 12.2331 232.413 12.0645C232.116 11.8958 231.852 11.6976 231.62 11.4697C231.387 11.2419 231.203 10.973 231.066 10.6631C230.934 10.3486 230.868 9.97949 230.868 9.55566C230.868 8.99056 231.002 8.50749 231.271 8.10645C231.544 7.7054 231.927 7.39779 232.419 7.18359C232.916 6.9694 233.495 6.8623 234.156 6.8623C234.68 6.8623 235.172 6.91699 235.632 7.02637C236.097 7.13574 236.553 7.29069 236.999 7.49121L236.48 8.81055C236.07 8.64193 235.671 8.50749 235.284 8.40723C234.901 8.30697 234.509 8.25684 234.108 8.25684C233.762 8.25684 233.468 8.30924 233.226 8.41406C232.985 8.51888 232.8 8.66699 232.672 8.8584C232.549 9.04525 232.488 9.26855 232.488 9.52832C232.488 9.81999 232.558 10.0661 232.7 10.2666C232.846 10.4626 233.069 10.6426 233.37 10.8066C233.675 10.9707 234.067 11.153 234.545 11.3535C235.097 11.5814 235.564 11.8206 235.947 12.0713C236.334 12.3219 236.63 12.6227 236.835 12.9736C237.041 13.32 237.143 13.7552 237.143 14.2793ZM244.591 17H238.931V7.00586H244.591V8.38672H240.571V11.1006H244.338V12.4746H240.571V15.6123H244.591V17ZM250.87 8.25684C250.391 8.25684 249.963 8.34342 249.585 8.5166C249.211 8.68978 248.894 8.94043 248.635 9.26855C248.375 9.59212 248.177 9.98633 248.04 10.4512C247.903 10.9115 247.835 11.431 247.835 12.0098C247.835 12.7845 247.944 13.4521 248.163 14.0127C248.382 14.5687 248.714 14.9971 249.161 15.2979C249.608 15.5941 250.173 15.7422 250.856 15.7422C251.28 15.7422 251.692 15.7012 252.094 15.6191C252.495 15.5371 252.909 15.4255 253.338 15.2842V16.6787C252.932 16.8382 252.522 16.9544 252.107 17.0273C251.692 17.1003 251.214 17.1367 250.672 17.1367C249.651 17.1367 248.803 16.9248 248.129 16.501C247.459 16.0771 246.957 15.4801 246.625 14.71C246.297 13.9398 246.133 13.0374 246.133 12.0029C246.133 11.2464 246.237 10.5537 246.447 9.9248C246.657 9.2959 246.962 8.75358 247.363 8.29785C247.764 7.83757 248.259 7.48438 248.846 7.23828C249.439 6.98763 250.116 6.8623 250.877 6.8623C251.378 6.8623 251.87 6.91927 252.353 7.0332C252.841 7.14258 253.292 7.2998 253.707 7.50488L253.133 8.8584C252.786 8.69434 252.424 8.55306 252.046 8.43457C251.667 8.31608 251.275 8.25684 250.87 8.25684ZM263.192 7.00586V13.4727C263.192 14.1699 263.044 14.7943 262.747 15.3457C262.456 15.8971 262.014 16.3346 261.421 16.6582C260.829 16.9772 260.084 17.1367 259.186 17.1367C257.905 17.1367 256.93 16.8018 256.26 16.1318C255.595 15.4574 255.262 14.5618 255.262 13.4453V7.00586H256.903V13.3018C256.903 14.1357 257.099 14.751 257.491 15.1475C257.883 15.5439 258.468 15.7422 259.247 15.7422C259.785 15.7422 260.223 15.6488 260.56 15.4619C260.902 15.2705 261.152 14.9925 261.312 14.6279C261.476 14.2588 261.558 13.8145 261.558 13.2949V7.00586H263.192ZM268.418 7.00586C269.279 7.00586 269.99 7.11068 270.551 7.32031C271.116 7.52995 271.535 7.84896 271.809 8.27734C272.087 8.70573 272.226 9.25033 272.226 9.91113C272.226 10.4033 272.134 10.8226 271.952 11.1689C271.77 11.5153 271.531 11.8024 271.234 12.0303C270.938 12.2581 270.621 12.4404 270.284 12.5771L273.121 17H271.269L268.856 12.9941H267.249V17H265.608V7.00586H268.418ZM268.309 8.37305H267.249V11.6406H268.384C269.145 11.6406 269.696 11.4993 270.038 11.2168C270.384 10.9342 270.558 10.5173 270.558 9.96582C270.558 9.38704 270.373 8.97689 270.004 8.73535C269.639 8.49382 269.074 8.37305 268.309 8.37305ZM280.07 17H274.41V7.00586H280.07V8.38672H276.05V11.1006H279.817V12.4746H276.05V15.6123H280.07V17ZM290.204 11.9072C290.204 13.0329 289.995 13.974 289.576 14.7305C289.156 15.4824 288.548 16.0498 287.75 16.4326C286.953 16.8109 285.991 17 284.866 17H282.09V7.00586H285.166C286.201 7.00586 287.094 7.19271 287.846 7.56641C288.598 7.93555 289.179 8.4847 289.589 9.21387C289.999 9.93848 290.204 10.8363 290.204 11.9072ZM288.495 11.9551C288.495 11.1348 288.366 10.4603 288.106 9.93164C287.851 9.40299 287.472 9.01107 286.971 8.75586C286.474 8.49609 285.861 8.36621 285.132 8.36621H283.731V15.626H284.893C286.101 15.626 287.003 15.3184 287.6 14.7031C288.197 14.0879 288.495 13.1719 288.495 11.9551ZM307.534 7.00586L304.922 17H303.131L301.463 11.0117C301.422 10.8659 301.377 10.6927 301.327 10.4922C301.277 10.2917 301.226 10.0866 301.176 9.87695C301.131 9.66732 301.09 9.47591 301.053 9.30273C301.021 9.125 300.999 8.98828 300.985 8.89258C300.976 8.98828 300.955 9.12272 300.923 9.2959C300.892 9.46908 300.853 9.66048 300.807 9.87012C300.766 10.0752 300.721 10.2803 300.671 10.4854C300.62 10.6859 300.575 10.8636 300.534 11.0186L298.893 17H297.109L294.504 7.00586H296.152L297.594 12.8643C297.64 13.0511 297.685 13.2539 297.731 13.4727C297.781 13.6868 297.827 13.9033 297.868 14.1221C297.913 14.3408 297.954 14.555 297.991 14.7646C298.027 14.9697 298.057 15.1566 298.08 15.3252C298.102 15.152 298.132 14.9606 298.169 14.751C298.205 14.5368 298.244 14.3203 298.285 14.1016C298.33 13.8783 298.376 13.6641 298.421 13.459C298.472 13.2539 298.522 13.0693 298.572 12.9053L300.199 7.00586H301.798L303.46 12.9258C303.51 13.0944 303.558 13.2835 303.603 13.4932C303.653 13.7028 303.701 13.917 303.747 14.1357C303.792 14.3545 303.833 14.5664 303.87 14.7715C303.906 14.9766 303.936 15.1611 303.959 15.3252C303.99 15.1019 304.032 14.8467 304.082 14.5596C304.132 14.2725 304.189 13.9808 304.253 13.6846C304.316 13.3883 304.38 13.1149 304.444 12.8643L305.879 7.00586H307.534ZM308.809 17V7.00586H310.449V17H308.809ZM316.414 17H314.766V8.40039H311.841V7.00586H319.333V8.40039H316.414V17ZM328.606 17H326.972V12.4883H322.365V17H320.724V7.00586H322.365V11.0938H326.972V7.00586H328.606V17Z" fill="#DADCE0"/>
                  <path d="M361.598 0.989806C359.713 1.09618 353.638 1.43896 348.1 1.74628C342.563 2.0595 338.018 2.32545 338 2.34318C337.982 2.355 339.135 5.55226 340.565 9.43508L343.16 16.4974L343.177 12.0945L343.189 7.69165H345.659C348.278 7.69165 348.857 7.73302 349.72 7.99306C351.321 8.46585 352.06 9.31688 352.072 10.7057C352.084 11.6217 351.8 12.2777 351.132 12.8865C350.399 13.5602 349.235 13.9089 347.462 13.9975L346.676 14.033V15.3568V16.6747H344.956C343.603 16.6747 343.242 16.6925 343.26 16.7456C343.691 18.0281 345.654 23.2347 345.695 23.217C345.73 23.2052 350.376 21.7513 356.02 19.9784L366.285 16.7634L364.695 16.7456L363.106 16.7338V12.2127V7.69165H364.849H366.592L366.604 12.1773L366.622 16.657L369.299 15.8178C370.771 15.3568 371.982 14.9668 372 14.9549C372.012 14.9431 370.593 11.7459 368.85 7.85713L365.676 0.782959L365.351 0.788869C365.174 0.788869 363.484 0.883428 361.598 0.989806ZM365.617 2.99327C365.995 3.10556 366.456 3.45424 366.669 3.80293C366.917 4.2048 367 4.82534 366.87 5.34541C366.752 5.84185 366.539 6.15507 366.161 6.4092C365.694 6.72242 365.316 6.82289 364.707 6.79334C363.874 6.75197 363.253 6.37374 362.928 5.70592C362.81 5.46361 362.786 5.32768 362.786 4.85489C362.786 4.3821 362.81 4.24617 362.928 3.99795C363.389 3.05828 364.447 2.66231 365.617 2.99327ZM360.151 7.63846C360.422 7.67392 360.824 7.75666 361.037 7.82758L361.421 7.9576L361.439 9.18686L361.451 10.4161L361.161 10.2625C360.375 9.8665 359.087 9.66556 358.307 9.81331C357.497 9.97288 356.876 10.4102 356.569 11.0426C356.41 11.3676 356.398 11.4267 356.398 12.1536C356.398 12.851 356.41 12.9515 356.54 13.2174C356.729 13.5957 357.261 14.1335 357.627 14.2989C358.614 14.7599 359.891 14.754 361.279 14.2812L361.687 14.1394V15.2859C361.687 16.326 361.675 16.4324 361.587 16.462C359.879 16.9348 357.952 16.982 356.457 16.5861C354.507 16.0719 353.289 15.0081 352.875 13.442C352.71 12.8274 352.692 11.7281 352.84 11.1785C353.301 9.45872 354.696 8.23536 356.764 7.74484C357.609 7.5439 359.016 7.49662 360.151 7.63846Z" fill="#DADCE0"/>
                  <path d="M361.598 0.989806C359.713 1.09618 353.638 1.43896 348.1 1.74628C342.563 2.0595 338.018 2.32545 338 2.34318C337.982 2.355 339.135 5.55226 340.565 9.43508L343.16 16.4974L343.177 12.0945L343.189 7.69165H345.659C348.278 7.69165 348.857 7.73302 349.72 7.99306C351.321 8.46585 352.06 9.31688 352.072 10.7057C352.084 11.6217 351.8 12.2777 351.132 12.8865C350.399 13.5602 349.235 13.9089 347.462 13.9975L346.676 14.033V15.3568V16.6747H344.956C343.603 16.6747 343.242 16.6925 343.26 16.7456C343.691 18.0281 345.654 23.2347 345.695 23.217C345.73 23.2052 350.376 21.7513 356.02 19.9784L366.285 16.7634L364.695 16.7456L363.106 16.7338V12.2127V7.69165H364.849H366.592L366.604 12.1773L366.622 16.657L369.299 15.8178C370.771 15.3568 371.982 14.9668 372 14.9549C372.012 14.9431 370.593 11.7459 368.85 7.85713L365.676 0.782959L365.351 0.788869C365.174 0.788869 363.484 0.883428 361.598 0.989806ZM365.617 2.99327C365.995 3.10556 366.456 3.45424 366.669 3.80293C366.917 4.2048 367 4.82534 366.87 5.34541C366.752 5.84185 366.539 6.15507 366.161 6.4092C365.694 6.72242 365.316 6.82289 364.707 6.79334C363.874 6.75197 363.253 6.37374 362.928 5.70592C362.81 5.46361 362.786 5.32768 362.786 4.85489C362.786 4.3821 362.81 4.24617 362.928 3.99795C363.389 3.05828 364.447 2.66231 365.617 2.99327ZM360.151 7.63846C360.422 7.67392 360.824 7.75666 361.037 7.82758L361.421 7.9576L361.439 9.18686L361.451 10.4161L361.161 10.2625C360.375 9.8665 359.087 9.66556 358.307 9.81331C357.497 9.97288 356.876 10.4102 356.569 11.0426C356.41 11.3676 356.398 11.4267 356.398 12.1536C356.398 12.851 356.41 12.9515 356.54 13.2174C356.729 13.5957 357.261 14.1335 357.627 14.2989C358.614 14.7599 359.891 14.754 361.279 14.2812L361.687 14.1394V15.2859C361.687 16.326 361.675 16.4324 361.587 16.462C359.879 16.9348 357.952 16.982 356.457 16.5861C354.507 16.0719 353.289 15.0081 352.875 13.442C352.71 12.8274 352.692 11.7281 352.84 11.1785C353.301 9.45872 354.696 8.23536 356.764 7.74484C357.609 7.5439 359.016 7.49662 360.151 7.63846Z" fill="#DADCE0"/>
                  <path d="M346.617 10.8239V12.0059H346.901C347.716 12.0059 348.437 11.734 348.638 11.3558C348.768 11.1017 348.78 10.5343 348.656 10.2979C348.437 9.86648 347.905 9.64191 347.107 9.64191H346.617V10.8239Z" fill="#DADCE0"/>
                  <g clipPath="url(#clip1_1029_352)">
                  <path d="M398.101 10.0026C398.081 11.5288 399.504 12.3804 400.576 12.8868C401.678 13.4063 402.048 13.7395 402.043 14.2042C402.035 14.9152 401.165 15.229 400.35 15.2412C398.929 15.2625 398.103 14.8693 397.446 14.5719L396.935 16.8937C397.594 17.1881 398.814 17.4448 400.079 17.4561C403.049 17.4561 404.992 16.0348 405.003 13.8312C405.015 11.0346 401.012 10.8798 401.04 9.62975C401.049 9.25072 401.422 8.84624 402.24 8.74339C402.645 8.69144 403.762 8.65168 405.028 9.21706L405.525 6.97067C404.844 6.73026 403.969 6.50006 402.879 6.50006C400.083 6.50006 398.117 7.94066 398.101 10.0026V10.0026ZM410.302 6.69355C409.76 6.69355 409.303 7.00022 409.099 7.47084L404.856 17.2911H407.824L408.415 15.7088H412.041L412.384 17.2911H415L412.717 6.69355H410.302V6.69355ZM410.717 9.55633L411.574 13.5358H409.228L410.717 9.55633V9.55633ZM394.503 6.69368L392.163 17.2909H394.991L397.33 6.69342H394.503V6.69368ZM390.319 6.69342L387.375 13.9066L386.184 7.77354C386.044 7.08889 385.492 6.69355 384.88 6.69355H380.067L380 7.00128C380.988 7.20909 382.11 7.54426 382.79 7.90289C383.207 8.12196 383.325 8.31347 383.462 8.83404L385.717 17.2911H388.706L393.289 6.69355H390.319" fill="#DADCE0"/>
                  </g>
                  <g clipPath="url(#clip2_1029_352)">
                  <path d="M427.84 5.28369H435.133V18.3956H427.84V5.28369Z" fill="#CACDD2"/>
                  <path d="M428.303 11.8397C428.303 9.1757 429.553 6.81272 431.475 5.28373C430.063 4.17179 428.28 3.5 426.335 3.5C421.728 3.5 418 7.22966 418 11.8397C418 16.4497 421.728 20.1795 426.335 20.1795C428.28 20.1795 430.063 19.5077 431.475 18.3956C429.553 16.8899 428.303 14.5038 428.303 11.8397V11.8397Z" fill="#DADCE0"/>
                  <path d="M444.973 11.8397C444.973 16.4497 441.245 20.1795 436.638 20.1795C434.693 20.1795 432.91 19.5077 431.498 18.3956C433.443 16.8668 434.67 14.5038 434.67 11.8397C434.67 9.1757 433.42 6.81272 431.498 5.28373C432.91 4.17179 434.693 3.5 436.638 3.5C441.245 3.5 444.973 7.25288 444.973 11.8397H444.973Z" fill="#DADCE0"/>
                  </g>
                  <defs>
                  <clipPath id="clip0_1029_352">
                  <rect width="116" height="16" fill="white" transform="translate(96 4)"/>
                  </clipPath>
                  <clipPath id="clip1_1029_352">
                  <rect width="35" height="11" fill="white" transform="translate(380 6.5)"/>
                  </clipPath>
                  <clipPath id="clip2_1029_352">
                  <rect width="27" height="17" fill="white" transform="translate(418 3.5)"/>
                  </clipPath>
                  </defs>
                </svg>
              </div>
            }
          </>
        }
      </div>
      <Notifications text={props.data.error} clearMessage={() => props.setData({ error: null })} />
      { isShow && <AdditionalMenu ref={ref} data={props.data} step={props.step} setShow={() => setIsShow(false)}/> }
    </div>
  )
}

export default PaymentContainer

